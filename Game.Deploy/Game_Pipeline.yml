trigger: none

pool: Default

variables:
- group: 'DEV - Environment Variables'
- name: repository
  value: 'game-server'
- name: tag
  value: '$(Build.BuildNumber)'

stages:
  - stage: Build
    jobs:
    - job: Build_Server
      steps:
      - task: DockerInstaller@0
        displayName: Install Docker CLI
      - task: Docker@2
        displayName: Build Image
        inputs:
          command: build
          repository: '$(repository)'
          dockerfile: '$(Build.SourcesDirectory)/Game.Server/Dockerfile'
          buildContext: $(Build.SourcesDirectory)
          tags: |
            $(tag)
      - task: CmdLine@2
        displayName: Prune Dangling Images
        inputs:
          script: |
            docker image prune -f

    - job: Build_Client
      steps:
      - task: CmdLine@2
        displayName: Hello World
        inputs:
          script: |
            echo "Hello World"

  - stage: Deploy
    jobs:
    - deployment: Deploy_Server
      displayName: Deploy Server
      environment: DEV
      strategy: 
        runOnce:
          deploy:
            steps:
              # TODO: Generate Encryption Keys and inject as ENV variables? also need to figure out way for client. (streamingAssets)
              - task: DockerInstaller@0
                displayName: Install Docker CLI
              - task: CmdLine@2
                displayName: Install Docker Compose
                inputs:
                  script: |
                    DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
                    mkdir -p $DOCKER_CONFIG/cli-plugins
                    curl -SL https://github.com/docker/compose/releases/download/v2.32.4/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
                    chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

              - task: CmdLine@2
                displayName: Deploy Server
                inputs:
                  script: |
                    docker compose up -d -f '$(Build.SourcesDirectory)/Game.Server/docker-compose.yml'
                env:
                  IMAGE_TAG: $(tag)
                  PlayFabOptions__TitleID: $(PlayFabOptions__TitleID)
                  PlayFabOptions__DeveloperSecretKey: $(PlayFabOptions__DeveloperSecretKey)
              - task: DockerCompose@1
                displayName: 'Build and Run Docker Compose'
                inputs:
                  containerregistrytype: 'Container Registry'  # Use 'Azure Container Registry' if applicable
                  dockerComposeFile: '**/docker-compose.yml'
                  dockerComposePath: '$HOME/.docker/cli-plugins/docker-compose'
                  projectName: 'game-server'
                  action: 'Run services'
                  dockerComposeCommand: up
                  detached: true 
                env:
                  IMAGE_TAG: $(tag)
                  PlayFabOptions__TitleID: $(PlayFabOptions__TitleID)
                  PlayFabOptions__DeveloperSecretKey: $(PlayFabOptions__DeveloperSecretKey)


    - deployment: Deploy_Client
      displayName: Deploy Client
      environment: DEV
      strategy: 
        runOnce:
          deploy:
            steps:
              - task: CmdLine@2
                displayName: Hello World
                inputs:
                  script: |
                    echo "Hello World"