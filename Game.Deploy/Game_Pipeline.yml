trigger: none

pool: Default

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'aafbb9e4-97ea-4d84-981e-f33051962c90'
  imageRepository: 'Game-Server'
  #containerRegistry: 'repoistoryname.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Game.Server/Dockerfile'
  tag: '$(Build.BuildId)'


stages:
  - stage: Build
    jobs:
    - job: Build_Server
      steps:
      - task: Docker@2
        displayName: Build and Push
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          buildContext: $(Build.SourcesDirectory)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)
      - task: CmdLine@2
        displayName: Clean up images
        inputs:
          script: |
            docker images | grep "$(tag)" | awk '{print $3}' | xargs docker rmi

    - job: Build_Client
      steps:
      - task: CmdLine@2
        displayName: Hello World
        inputs:
          script: |
            echo "Hello World"

  - stage: Deploy
    jobs:
    - deployment: Deploy_Server
      displayName: Deploy Server
      environment: DEV'
      strategy: 
        runOnce:
          deploy:
            steps:
              - task: CmdLine@2
                displayName: Hello World
                inputs:
                  script: |
                    echo "Hello World"
    - deployment: Deploy_Client
      displayName: Deploy Client
      environment: DEV'
      strategy: 
        runOnce:
          deploy:
            steps:
              - task: CmdLine@2
                displayName: Hello World
                inputs:
                  script: |
                    echo "Hello World"